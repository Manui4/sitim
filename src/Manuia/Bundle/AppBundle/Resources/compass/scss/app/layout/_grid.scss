/* ==|====================
   Layout/Grid
   ======================= */

@mixin responsive-columns($suffix: '-s'){
    @for $i from 0 through $columns {
        @if $i != 0 {
            .col#{$suffix}-#{$i} { 
                width:$i / $columns * 100%;
                padding: 0.5em;
            }
        }
        .col#{$suffix}-center { margin: 0 auto; float: none ;}
        .col#{$suffix}-push-#{$i} { left : $i / $columns * 100%;}
        .col#{$suffix}-offset-#{$i} { margin-left : $i / $columns * 100%;}
        .col#{$suffix}-pull-#{$i} { right : $i / $columns * 100%;}
    }
}

%col {
    float:left;
    position: relative;
    min-height: 1px;
    background-color: none;
}

.container {
    margin-right: auto;
    margin-left: auto;
    background-color: none;
    width: 100%;
    @include clearfix;
}

@media ( min-width : $width-device-l) {
    .l-container { 
         width: $width-device-l + $gutter;
    }
}

.row {
    @include clearfix;
}

@for $i from 0 through $columns {
    .col-s-#{$i}, .col-m-#{$i}, .col-l-#{$i} { @extend %col; }
}

@include responsive-columns('-s');
.s-show { display: block;}
.m-show { display: none;}
.l-show { display: none;}
.s-hide { display: none;}
.s-hide-only { display: none;}

@media only screen and (min-width : $width-device-m ) {
    @include responsive-columns('-m');
    .s-show { display: none;}
    .m-show { display: block;}
    .l-show { display: none;}
    .m-hide { display: none;}
    .s-hide-only { display: block;}
}

@media only screen and (min-width : $width-device-l ) {
    @include responsive-columns('-l');
    .s-show { display: none;}
    .m-show { display: none;}
    .l-show { display: block;}
    .l-hide { display: none;}
    .s-hide-only { display: block;}
}


